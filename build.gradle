/*
 * Copyright (C) 2018 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {
    kotlin_version = '1.2.51'
    plugin_version = '3.2.0-beta04'
    dokka_version = "0.9.17"
  }
  repositories {
    google()
    jcenter()
  }

  ext {

    minSdk = 16
    maxSdk = 28

    androidx = "1.0.0-beta01"
    constraintLayout = "1.1.2"

    timber = "4.7.1"
    moshi = "1.6.0"
    retrofit = "2.4.0"
    retrofitLogging = "3.11.0"
    rxjava = "2.1.17"
    rxandroid = "2.0.2"
  }

  dependencies {
    classpath "com.android.tools.build:gradle:$plugin_version"

    // Dex count
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.3'

    // Gradle version checker
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'

    // To publish
    classpath "com.github.dcendents:android-maven-gradle-plugin:2.0"
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"

    // Kotlin
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    // Dokka
    classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"
  }
}

subprojects {
  apply plugin: 'com.android.library'
  apply plugin: 'kotlin-android'
  apply plugin: 'kotlin-kapt'
  apply plugin: "com.getkeepsafe.dexcount"
  apply plugin: 'com.github.dcendents.android-maven'
  apply plugin: 'com.github.ben-manes.versions'
  apply plugin: 'org.jetbrains.dokka-android'
  apply plugin: 'maven-publish'
  apply plugin: 'com.jfrog.bintray'

  final String POM_GROUP = "com.pyamsoft.pydroid"
  final String POM_VERSION = "18.0.1-SNAPSHOT"

  group = POM_GROUP
  version = POM_VERSION

  task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
  }

  task androidJavadocsJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from "$buildDir/dokka"
  }

  artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
  }

  // Kapt flags
  kapt {
    correctErrorTypes = true
    useBuildCache = true
    mapDiagnosticLocations = true
  }

  android {
    compileSdkVersion rootProject.ext.maxSdk

    //noinspection GroovyMissingReturnStatement
    defaultConfig {
      minSdkVersion rootProject.ext.minSdk

      // For vector drawables
      vectorDrawables.useSupportLibrary = true

      // Consumer proguard file
      consumerProguardFiles "proguard-rules.pro"

      // Only English, I don't have any translations
      resConfigs "en"

      javaCompileOptions {
        annotationProcessorOptions {
          // Fix kapt
          includeCompileClasspath = true
        }
      }
    }

    dataBinding {
      enabled true
    }

    buildTypes {
      debug {
        minifyEnabled false
        shrinkResources false
      }

      release {
        minifyEnabled false
        shrinkResources false
        proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
      }
    }

    // TODO replace with https://issuetracker.google.com/issues/72050365 once released.
    libraryVariants.all {
      it.generateBuildConfig.enabled = false
    }
  }

  publishing {
    publications {
      PYDroid(MavenPublication) {
        artifact bundleReleaseAar
        artifact androidSourcesJar
        artifact androidJavadocsJar
        groupId POM_GROUP
        artifactId project.name
        version POM_VERSION

        pom.withXml {
          def dependenciesNode = asNode().appendNode('dependencies')

          configurations.implementation.allDependencies.each {
            // Ensure dependencies such as fileTree are not included in the pom.
            if (it.name != 'unspecified') {
              def dependencyNode = dependenciesNode.appendNode('dependency')
              dependencyNode.appendNode('groupId', it.group)
              dependencyNode.appendNode('artifactId', it.name)
              dependencyNode.appendNode('version', it.version)
            }
          }
        }
      }
    }
  }

  final String GITHUB_ROOT_URL = "https://github.com/pyamsoft/pydroid"
  bintray {
    user = 'pyamsoft'
    key = BINTRAY_API_KEY
    publications = ['PYDroid']
    override = true
    pkg {
      repo = 'PYDroid'
      name = project.name
      desc = "PYDroid library: ${project.name}"
      licenses = ['Apache-2.0']
      vcsUrl = "${GITHUB_ROOT_URL}/tree/master/${project.name}"
      websiteUrl = "${GITHUB_ROOT_URL}"
      version {
        name = POM_VERSION
        issueTrackerUrl = "${GITHUB_ROOT_URL}/issues"
        desc = "PYDroid library: ${project.name}"
        released = new Date()
        vcsTag = POM_VERSION
      }
    }
  }
}

allprojects {
  repositories {
    google()
    jcenter()
  }

  tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
    options.deprecation = true
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
